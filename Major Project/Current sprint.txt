This file contains the current sprint information, 
it will be moved into the product backlog once the sprint has ended.

Sprint 0 (13th - 20th February)

	Tackling tasks from product backlog:
		Designing file structure

		Loading and saving functions (ongoing) 		(time: 03h) (priority: 9)
		Add in rocks (ongoing)				(time: 10h) (priority: 8)
		Create missions for user 			(time: 10h) (priority: 8)
		Build terrain (ongoing) 			(time: 10h) (priority: 6)
		Collision with terrain (ongoing) 		(time: 05h) (priority: 6)			

		Total estimated hours = 39

	Sprint plan:
		Loading and saving
			HTML5 local storage

		Add in rocks 
			Low poly instanced rendered rocks for non interaction
			Then spheres for interacting with
			Use exising sphere geometry, randomly shift vertices
			Then place them into the world
	
			To do:
				Add in different rocks in different sections

			Notes:
				GLdrawElementsInstaced
				only needed as performance optimization, not needed for this
				
			Problems
				WHY ARE THERE SO MANY VERTICES FOR THREE.JS SPHERE?
				Sphere doesn't connect at back, changed rotation
		
		Create missions for user
			Would involve creating very basic GUI first, see-through, blue? futureistic
			Go and explore this section of the map
			Go collect this rock
			Collect X of this rock, to then unlock this rock	
			Print text on screen character by character (left gui?)
				-have a initial sound to incate new mission

			If they're colliding with rock + mouse held down
				-Show mining progress bar
				-Show particle effects
				-When 100% remove rock, or set its texture to something, depleted

			They can shoot laser, draw in view direction from infront of them
			If that collides with rock,
			Cap max laser range	

				Particles - make object with constructor! (could have LAVA in craters!)
				Bunch of gl points, move them, if out of bounds reset them
				Define 100 points, put in buffer, 1 draw call?
				Apply some position to them in v shader?

			Randomly generate them a mission, depending on their lvl? every few minutes
			-Else, just go explore and mine rocks
			-IF gameTime over 5000, give first mission

		Build terrain
			Add different levels of perlin noise
				Try stack 2d simplex noise
			Add in craters and stuff

		Collision with terrain
			Added in 2D heightmap rather than 1d in collision file
			Pop up on GUI, too close etc
	

	Sprint progress:
	
		Sphere geometries (NOT MINE)
			USED CODE FROM: https://github.com/mrdoob/three.js/blob/master/src/geometries/SphereGeometry.js
			The used code is in the createRock function of the rock.js file
		Didn't want to try write sphere geometry code from scratch
		But also didn't want to import OBJ of sphere, as would be hard to change vertices

		Randomly changed sphere vertices, rougher geometry
		Split texture code into respective files

		What happens if the rocks spawn on the player, they're stuck

		Rock collision works up to 0.5 which is big enough

		GUI code, goes bottom left of screen out of the way maybe
		Blue grid as background

		Redesigned files, made player class, object oriented


	Sprint retrospective:

		Compeleted tasks: (include time and difficulties here)
			//Loading and saving functions intial setup 	(time: 0.5h) (priority: 9)
			//Currently just loads and saves player position
			
		Annoying things:
			Positioning little elements and css'ing them took hours

		Added inital background screen



