1st - 7th February

	Added:
		Boilerplate code including:
		Basic vertex and fragment shaders
		index.html file
	
		Model view projection matrices
		Rendered a square with some depth to make sure matrices working	

		Grid of vertices with double for loop
		1D heightmap of vertices
		Assigned heightmap values to vertex heights

	Found new m4.js matrix library, rather than MDN library


7th February

	Added:
		Github project
		Screenshots folder, bug log, changelog


8th February

	Added:
		Player can now look up and down as well as left and right	

	Fixed:
		Terrain now renders at its position, rather than at players position
		Camera rotation now goes 360 degrees
		Rover can no longer go left/right, didnt make sense for it to


9th February
	
	Added:
		Expanded terrain to 256 rows 256 columns
		Clearing of depth buffer, terrain now renders properly	
		Seperate code into collision.js and movement.js	

	Fixed:		
		Player now moves backwards properly	
		Player movement speed can now be changed	

	Researched:
		OpenGL lighting
		Geometry buffer, useful for particle effects (perhaps drilling rocks)
		It's also useful for calculating normals for lighting

	3D Movement mechanics are now working properly.


10th February
		
	Added:
		Hill/Crater terrain generation, not finished yet
		Some screenshots showing progress
	
	Fixed: 
		Turned 1D heightMap into 2D heightMap for easier indexing


11th February

	Added:
		Split screenshots folder to have sub folders

		Deeper hill and crater generation	
		Split up terrain code, creation, buffers, rendering etc
		Added createHill and createCrater functions, that call the other getSurroundingElements
		More comments to terrain code
		Added some random terrain cliffs, temporary, very easy to add

		I thought my perlin noise terrain generation was strange, so decided to have
		another look at it.
		Discovered I was being stupid and not using perlin noise correctly
		Looked at how I did it from a previous scratch pad and fixed it
		But original method is useful for flat bumpy areas
		Now gives nice rolling hills

		terrain1 shows rolling hills with a crater, nice	

	Researched:
		OpenGL texture mapping