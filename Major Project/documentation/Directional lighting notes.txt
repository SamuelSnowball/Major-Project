Directional lighting notes

Light has a DIRECTION and colour, position is irrelevant
Surface has normals, recalcuated in shader for when object moves

Take dot product of light direction and surface normal, which
gives us cosine of angle between 2 vectors

If dot product gives 1, the light is pointing directly at surface normal
If dot product gives -1 they are completely opposite

	(Light direction coming down, normals facing up)
	dot(reverseLightDirection, surfaceNormal) = 1

	(Light direction coming up, normals facing up)
	dot(reverseLightDirection, surfaceNormal) = -1

Objects brightness is based on angle between its normal vector
and the light direction vector.

Times the light colour by the dot product value, and add to pixel.

Test it by rotating the terrain like: rotateX = m4.xRotation(Date.now()*0.0003);
With the light direction coming directly down,
When terrain normals are facing away from light, no brightness.
When terrain normals are facing to the light, full brightness